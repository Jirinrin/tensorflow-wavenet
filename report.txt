TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 10 files
Detected 3 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: .\train.py
--------------------------------------------------------------------------------
.\train.py:118:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\test\test_model.py
--------------------------------------------------------------------------------
.\test\test_model.py:197:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\wavenet\model.py
--------------------------------------------------------------------------------
.\wavenet\model.py:543:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: '.'
================================================================================
--------------------------------------------------------------------------------
Processing file '.\\generate.py'
 outputting to 'vv2/generate.py'
--------------------------------------------------------------------------------

128:16: INFO: Added keywords to args of function 'tf.cond'
128:24: INFO: Added keywords to args of function 'tf.size'
129:32: INFO: Added keywords to args of function 'tf.size'
142:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
158:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
166:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
170:38: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
172:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
263:13: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
263:13: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
264:4: INFO: tf.summary.audio requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
264:4: INFO: Renamed 'tf.summary.audio' to 'tf.compat.v1.summary.audio'
265:16: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
265:16: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\train.py'
 outputting to 'vv2/train.py'
--------------------------------------------------------------------------------

118:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
212:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

212:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
259:16: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
263:13: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
263:13: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
264:21: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
265:19: INFO: Renamed 'tf.RunMetadata' to 'tf.compat.v1.RunMetadata'
266:16: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
266:16: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
269:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
269:29: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
270:11: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
274:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
274:36: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
289:14: INFO: Renamed 'tf.train.start_queue_runners' to 'tf.compat.v1.train.start_queue_runners'
300:30: INFO: Renamed 'tf.RunOptions' to 'tf.compat.v1.RunOptions'
301:32: INFO: Renamed 'tf.RunOptions' to 'tf.compat.v1.RunOptions'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\test\\test_causal_conv.py'
 outputting to 'vv2/test\\test_causal_conv.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\test\\test_generation.py'
 outputting to 'vv2/test\\test_generation.py'
--------------------------------------------------------------------------------

22:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
28:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
37:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
43:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
51:19: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
57:21: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\test\\test_model.py'
 outputting to 'vv2/test\\test_model.py'
--------------------------------------------------------------------------------

96:26: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
97:21: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
196:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
196:40: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
197:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
231:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
232:25: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
239:20: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
241:15: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\test\\test_mu_law.py'
 outputting to 'vv2/test\\test_mu_law.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\wavenet\\audio_reader.py'
 outputting to 'vv2/wavenet\\audio_reader.py'
--------------------------------------------------------------------------------

108:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
109:21: INFO: Renamed 'tf.PaddingFIFOQueue' to 'tf.queue.PaddingFIFOQueue'
115:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
116:28: INFO: Renamed 'tf.PaddingFIFOQueue' to 'tf.queue.PaddingFIFOQueue'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\wavenet\\model.py'
 outputting to 'vv2/wavenet\\model.py'
--------------------------------------------------------------------------------

10:18: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

27:18: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
27:18: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
134:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
142:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
150:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
166:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
168:25: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
217:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
241:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

241:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
283:40: INFO: Added keywords to args of function 'tf.nn.conv1d'
283:40: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
289:36: INFO: Added keywords to args of function 'tf.nn.conv1d'
289:36: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
305:22: INFO: Added keywords to args of function 'tf.nn.conv1d'
305:22: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
309:19: INFO: Added keywords to args of function 'tf.shape'
312:28: INFO: Added keywords to args of function 'tf.nn.conv1d'
312:28: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
333:20: INFO: Added keywords to args of function 'tf.shape'
333:47: INFO: Added keywords to args of function 'tf.shape'
348:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

348:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
403:23: INFO: Added keywords to args of function 'tf.shape'
406:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

406:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
408:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

408:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
414:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

414:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
434:20: INFO: Added keywords to args of function 'tf.nn.conv1d'
434:20: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
438:20: INFO: Added keywords to args of function 'tf.nn.conv1d'
438:20: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
451:12: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
467:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

467:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
469:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

469:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
471:24: INFO: Renamed 'tf.FIFOQueue' to 'tf.queue.FIFOQueue'
491:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

491:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
522:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

522:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
543:24: INFO: Added keywords to args of function 'tf.nn.embedding_lookup'
543:24: WARNING: tf.nn.embedding_lookup requires manual check. `partition_strategy` has been removed from tf.nn.embedding_lookup.  The 'div' strategy will be used by default.
573:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

573:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
588:17: INFO: Added keywords to args of function 'tf.shape'
603:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

603:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
613:17: INFO: Added keywords to args of function 'tf.shape'
626:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

626:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
641:34: INFO: Added keywords to args of function 'tf.shape'
647:17: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

647:17: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
660:23: INFO: Changing labels arg of tf.nn.softmax_cross_entropy_with_logits to tf.stop_gradient(labels). Please check this transformation.

663:31: INFO: Added keywords to args of function 'tf.reduce_mean'
665:16: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
665:16: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
672:49: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
679:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
679:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
680:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
680:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\wavenet\\ops.py'
 outputting to 'vv2/wavenet\\ops.py'
--------------------------------------------------------------------------------

7:11: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
12:11: INFO: Renamed 'tf.train.MomentumOptimizer' to 'tf.compat.v1.train.MomentumOptimizer'
17:11: INFO: Renamed 'tf.train.RMSPropOptimizer' to 'tf.compat.v1.train.RMSPropOptimizer'
28:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

28:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
29:16: INFO: Added keywords to args of function 'tf.shape'
31:17: INFO: Added keywords to args of function 'tf.pad'
33:21: INFO: Added keywords to args of function 'tf.transpose'
38:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

38:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
39:16: INFO: Added keywords to args of function 'tf.shape'
41:21: INFO: Added keywords to args of function 'tf.transpose'
43:27: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
47:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

47:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
48:23: INFO: Added keywords to args of function 'tf.shape'
51:19: INFO: Added keywords to args of function 'tf.nn.conv1d'
51:19: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
55:23: INFO: Added keywords to args of function 'tf.nn.conv1d'
55:23: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
57:20: INFO: Added keywords to args of function 'tf.shape'
66:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

66:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
67:13: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
72:20: INFO: Renamed 'tf.log1p' to 'tf.math.log1p'
72:52: INFO: Renamed 'tf.log1p' to 'tf.math.log1p'
75:15: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
80:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

80:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
83:22: INFO: Changed tf.to_float call to tf.cast(..., dtype=tf.float32).
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\wavenet\\__init__.py'
 outputting to 'vv2/wavenet\\__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

